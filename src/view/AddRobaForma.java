/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Controller;
import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import model.entity.Filijala;
import model.entity.JedinicaMere;
import model.entity.Mesto;
import model.entity.Nalog;
import model.entity.Obrazac;
import model.entity.PoreskiObveznik;
import model.entity.Roba;

/**
 *
 * @author HP
 */
public class AddRobaForma extends javax.swing.JFrame {

    String operation;
    RobaForma parent;
    Roba r;
    
    /**
     * Creates new form AddRobaForma
     */
    public AddRobaForma(RobaForma parent, boolean modal, Roba r, String operation) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.parent = parent;
        this.r = r;
        this.operation = operation;
        
        fillCmbJM();
        
        if (operation.equals("UPDATE")) {
            adjustFields(r);
        }else{
            txtAktuelnaCena.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtVrsta = new javax.swing.JTextField();
        txtMarka = new javax.swing.JTextField();
        txtModel = new javax.swing.JTextField();
        txtTip = new javax.swing.JTextField();
        txtAktuelnaCena = new javax.swing.JTextField();
        cmbJM = new javax.swing.JComboBox();
        btnAdd = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Vrsta:");

        jLabel3.setText("Marka:");

        jLabel4.setText("Model:");

        jLabel5.setText("Tip:");

        jLabel6.setText("Jedinica mere:");

        jLabel7.setText("Aktuelna cena:");

        cmbJM.setEditable(true);

        btnAdd.setText("Dodaj");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(92, 92, 92)
                        .addComponent(txtVrsta, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(87, 87, 87)
                        .addComponent(txtMarka, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(88, 88, 88)
                        .addComponent(txtModel, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(104, 104, 104)
                        .addComponent(txtTip, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAktuelnaCena, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                            .addComponent(cmbJM, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAdd)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtVrsta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMarka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cmbJM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtAktuelnaCena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(btnAdd)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            if (this.operation.equals("INSERT")) {
                this.insert();
            } else if (this.operation.equals("UPDATE")) {
                this.update();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
            adjustFields(r);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddRobaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddRobaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddRobaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddRobaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new AddRobaForma().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JComboBox cmbJM;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField txtAktuelnaCena;
    private javax.swing.JTextField txtMarka;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtTip;
    private javax.swing.JTextField txtVrsta;
    // End of variables declaration//GEN-END:variables

    private void adjustFields(Roba r) {
        txtVrsta.setText(r.getVrsta());
        txtMarka.setText(r.getMarka());
        txtModel.setText(r.getModel());
        txtTip.setText(r.getTip());
        cmbJM.setSelectedItem(r.getJm());
        txtAktuelnaCena.setText(String.valueOf(r.getAktuelnaCena()));
        btnAdd.setText("Izmeni");
    }

    private void fillCmbJM() {
        try {
            cmbJM.removeAllItems();
            List<JedinicaMere> jm = Controller.getInstance().getJmList();
            for (JedinicaMere jedinicaMere : jm) {
                cmbJM.addItem(jedinicaMere);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Greska prilikom ucitavanja jm!", "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void insert() throws Exception {
        if(txtVrsta.getText().isEmpty() || txtMarka.getText().isEmpty() || txtModel.getText().isEmpty() || txtTip.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Morate popuniti sva polja!");
            return;
        }
        
        String vrsta = txtVrsta.getText();
        String marka = txtMarka.getText();
        String model = txtModel.getText();
        String tip = txtTip.getText();
        JedinicaMere jm = (JedinicaMere) cmbJM.getSelectedItem();
        
        Roba roba = new Roba(0, vrsta, marka, model, tip, jm, 0);
        
        Controller.getInstance().insert(roba);
        JOptionPane.showMessageDialog(this, "Uspesno ste unesi robu!", "Uspesno", JOptionPane.INFORMATION_MESSAGE);
        parent.refreshTable();
        this.setVisible(false);
        dispose();
    }
    
    private void update() throws Exception {
        if(txtVrsta.getText().isEmpty() || txtMarka.getText().isEmpty() || txtModel.getText().isEmpty() || txtTip.getText().isEmpty() || txtAktuelnaCena.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Morate popuniti sva polja!");
            return;
        }
        
        String vrsta = txtVrsta.getText();
        String marka = txtMarka.getText();
        String model = txtModel.getText();
        String tip = txtTip.getText();
        JedinicaMere jm = (JedinicaMere) cmbJM.getSelectedItem();
        double aktCena = Double.parseDouble(txtAktuelnaCena.getText());
        
        Roba roba = new Roba(r.getIdRoba(), vrsta, marka, model, tip, jm, 0);
        
        if(aktCena != r.getAktuelnaCena()){
            roba.setCenaIzmena(true);
        }
        
        Controller.getInstance().update(roba);
        JOptionPane.showMessageDialog(this, "Uspesno ste izmenili robu!", "Uspesno", JOptionPane.INFORMATION_MESSAGE);
        parent.refreshTable();
        this.setVisible(false);
        dispose();
    }
}
